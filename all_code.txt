
=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\manifest.json ===

{
    "manifest_version": 3,
    "name": "YouTube –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ü–∞—Ä—Å–µ—Ä OS",
    "version": "1.0.0",
    "description": "–ù–æ–≤—ã–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ YouTube.",
    "icons": {
        "16": "icons/icon16.png"
    },
    "action": {
        "default_popup": "popup/popup.html",
        "default_icon": {
            "16": "icons/icon16.png"
        }
    },
    "background": {
        "service_worker": "background/background.js",
        "type": "module"
    },
    "content_scripts": [
        {
            "matches": [
                "*://*.youtube.com/*"
            ],
            "js": [
                "content/content.js"
            ],
            "run_at": "document_idle"
        }
    ],
    "permissions": [
        "activeTab",
        "scripting",
        "storage",
        "tabs"
    ],
    "host_permissions": [
        "*://*.youtube.com/*"
    ]
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\manifest.json ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\adapters\ChromeStorageLogAdapter.js ===

// adapters/ChromeStorageLogAdapter.js
import { Logger } from '../core/logger.js'; // –î–ª—è —Ç–∏–ø–æ–≤

/**
 * @typedef {import('../core/types/log.types.js').LogEntry} LogEntry
 * @typedef {import('../core/types/log.types.js').LogAdapter} LogAdapter
 */

export class ChromeStorageLogAdapter {
    /** @type {string} */
    #storageKey;
    /** @type {number} */
    #maxSize;

    /**
     * @param {Object} options
     * @param {string} [options.storageKey='appLogs']
     * @param {number} [options.maxSize=500]
     */
    constructor(options = {}) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å chrome.storage.local
        if (typeof chrome === 'undefined' || !chrome.storage || !chrome.storage.local) {
            throw new Error('ChromeStorageLogAdapter: chrome.storage.local is not available.');
        }

        this.#storageKey = options.storageKey ?? 'appLogs';
        this.#maxSize = options.maxSize ?? 500;
    }

    /**
     * @param {LogEntry} entry
     * @returns {Promise<void>}
     */
    async write(entry) {
        try {
            const logs = await this.read();
            logs.push(entry);
            if (logs.length > this.#maxSize) {
                logs.splice(0, logs.length - this.#maxSize);
            }
            await chrome.storage.local.set({ [this.#storageKey]: logs });
        } catch (e) {
            console.error("[ChromeStorageLogAdapter] –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏:", e);
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –∞–¥–∞–ø—Ç–µ—Ä–µ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É –∏–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∞—á–µ
            // throw e;
        }
    }

    /**
     * @returns {Promise<LogEntry[]>}
     */
    async read() {
        try {
            const result = await chrome.storage.local.get([this.#storageKey]);
            return result[this.#storageKey] || [];
        } catch (e) {
            console.error("[ChromeStorageLogAdapter] –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è:", e);
            return [];
        }
    }

    /**
     * @returns {Promise<void>}
     */
    async clear() {
        try {
            await chrome.storage.local.remove([this.#storageKey]);
        } catch (e) {
            console.error("[ChromeStorageLogAdapter] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:", e);
        }
    }
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\adapters\ChromeStorageLogAdapter.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\adapters\ConsoleLogAdapter.js ===

// adapters/ConsoleLogAdapter.js

/**
 * @typedef {import('../core/types/log.types.js').LogEntry} LogEntry
 * @typedef {import('../core/types/log.types.js').LogAdapter} LogAdapter
 */

export class ConsoleLogAdapter {
    /**
     * @param {LogEntry} entry
     * @returns {Promise<void>}
     */
    async write(entry) {
        // –õ–æ–≥–∏–∫–∞ —É–∂–µ –µ—Å—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–ª–∞—Å—Å–µ, –Ω–æ –º–æ–∂–Ω–æ –∏ –∑–¥–µ—Å—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å
        // –Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
        // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –ø—É—Å—Ç—ã–º, —Ç–∞–∫ –∫–∞–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ Logger
    }

    /**
     * @returns {Promise<LogEntry[]>}
     */
    async read() {
        console.warn("[ConsoleLogAdapter] –ß—Ç–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ");
        return [];
    }

    /**
     * @returns {Promise<void>}
     */
    async clear() {
        console.clear(); // –§–∏–∑–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ—Ç –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
    }
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\adapters\ConsoleLogAdapter.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\background\background.js ===

// background/background.js
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏
import { Logger } from '../core/logger.js';
import { ChromeStorageLogAdapter } from '../adapters/ChromeStorageLogAdapter.js';
import { ScenarioEngine } from '../core/scenario-engine.js';
import { testCountdownScenario } from '../scenarios/test-countdown.js';

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ ---
// 1. –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞
export const logger = new Logger({
    maxSize: 1000,
    enableConsole: true,
    defaultLevel: 'info'
});
// logger –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–∂–µ –¥–æ–±–∞–≤–∏–ª ChromeStorageLogAdapter, –Ω–æ –º—ã –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë

// 2. –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–≤–∏–∂–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
export const scenarioEngine = new ScenarioEngine();

// 3. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
scenarioEngine.registerScenario(testCountdownScenario);
// --- –ö–æ–Ω–µ—Ü –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ ---

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç popup ---
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
    // üëá –ù–û–í–û–ï: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
    if (request.action === "runTestScenario") {
        logger.info("üì• –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è", { module: 'Background' });

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        (async () => {
            try {
                // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                let activeTabId = null;
                try {
                    const [activeTab] = await chrome.tabs.query({ active: true, currentWindow: true });
                    activeTabId = activeTab?.id || null;
                } catch (e) {
                    logger.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è", { module: 'Background' });
                }

                const instanceId = await scenarioEngine.run(testCountdownScenario, {}, activeTabId);
                logger.info(`üèÅ –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–ø—É—â–µ–Ω —Å ID: ${instanceId}`, { module: 'Background' });

            } catch (err) {
                logger.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è: ${err.message}`, { module: 'Background' });
            }
        })();

        // –í–∞–∂–Ω–æ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        return true;
    }

    // TODO: –ó–¥–µ—Å—å –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π (parseOnce, startAutoAnalysis –∏ —Ç.–¥.)
    // –∫–æ—Ç–æ—Ä—ã–µ –º—ã –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–º –Ω–∞ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É.
    // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –∑–∞–≥–ª—É—à–∫—É –∏–ª–∏ —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å MVP.
});

logger.info("üöÄ Background service worker –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.", { module: 'Background' });


=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\background\background.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\content\content.js ===



=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\content\content.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\core\logger.js ===

// core/logger.js
import { ChromeStorageLogAdapter } from '../adapters/ChromeStorageLogAdapter.js';

/**
 * @typedef {import('./types/log.types.js').LogEntry} LogEntry
 * @typedef {import('./types/log.types.js').LoggerConfig} LoggerConfig
 * @typedef {import('./types/log.types.js').LogAdapter} LogAdapter
 * @typedef {import('./types/log.types.js').LogSubscriber} LogSubscriber
 */

export class Logger {
    /** @type {LogAdapter[]} */
    #adapters = [];
    /** @type {LogSubscriber[]} */
    #subscribers = [];
    /** @type {LoggerConfig} */
    #config;

    /**
     * @param {LoggerConfig} config
     */
    constructor(config = {}) {
        this.#config = {
            maxSize: config.maxSize ?? 1000,
            enableConsole: config.enableConsole ?? true,
            defaultLevel: config.defaultLevel ?? 'info',
        };

        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ–±–∞–≤–ª—è–µ–º –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è Chrome Storage
        this.addAdapter(new ChromeStorageLogAdapter({ maxSize: this.#config.maxSize }));
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è/–≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ–≤.
     * @param {LogAdapter} adapter
     */
    addAdapter(adapter) {
        this.#adapters.push(adapter);
    }

    /**
     * –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –Ω–æ–≤—ã–µ –ª–æ–≥–∏ –∏ –∫–æ–º–∞–Ω–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—á–∏—Å—Ç–∫–∞).
     * @param {LogSubscriber} callback
     */
    subscribe(callback) {
        this.#subscribers.push(callback);
    }

    /**
     * –û—Ç–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –æ—Ç –Ω–æ–≤—ã—Ö –ª–æ–≥–æ–≤.
     * @param {LogSubscriber} callback
     */
    unsubscribe(callback) {
        this.#subscribers = this.#subscribers.filter(cb => cb !== callback);
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ª–æ–≥-–∑–∞–ø–∏—Å—å.
     * @param {string} message
     * @param {'debug'|'info'|'success'|'warn'|'error'} [level]
     * @param {Object} [options]
     * @param {string} [options.module]
     * @param {string} [options.contextId]
     * @param {Object} [options.meta]
     */
    async log(message, level = this.#config.defaultLevel, options = {}) {
        const entry = {
            id: this.#generateId(),
            timestamp: Date.now(),
            level,
            message,
            module: options.module,
            contextId: options.contextId,
            meta: options.meta,
        };

        // 1. –ó–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä—ã
        const writePromises = this.#adapters.map(adapter => adapter.write(entry));
        await Promise.allSettled(writePromises); // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º—Å—è –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –æ–¥–Ω–æ–≥–æ –∞–¥–∞–ø—Ç–µ—Ä–∞

        // 2. –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
        if (this.#config.enableConsole) {
            this.#logToConsole(entry);
        }

        // 3. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        this.#notifySubscribers(entry);

        // 4. üëá –ù–û–í–û–ï: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ popup (–µ—Å–ª–∏ –≤ background)
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ Service Worker (background)
        if (typeof chrome !== 'undefined' && chrome.runtime) {
            try {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–µ–ª–æ—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ this
                chrome.runtime.sendMessage({
                    type: "newLog",
                    log: entry
                }).catch(err => {
                    // –≠—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ sendMessage
                    if (chrome.runtime.lastError) {
                        // –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ popup –∑–∞–∫—Ä—ã—Ç
                        // console.debug("Popup –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è sendMessage:", chrome.runtime.lastError.message);
                    } else {
                        console.debug("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞ –≤ popup (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è):", err);
                    }
                });
            } catch (syncSendError) {
                // –≠—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ sendMessage
                // –ú–æ–∂–µ—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å, –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–µ–∫—É—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ (—Ä–µ–¥–∫–æ)
                console.debug("–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ sendMessage:", syncSendError);
            }
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –ª–æ–≥–∏ –∏–∑ –≤—Å–µ—Ö –∞–¥–∞–ø—Ç–µ—Ä–æ–≤ (–±–µ—Ä–µ—Ç –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ).
     * @returns {Promise<LogEntry[]>}
     */
    async getAllLogs() {
        for (const adapter of this.#adapters) {
            try {
                const logs = await adapter.read();
                return logs;
            } catch (e) {
                console.warn("[Logger] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ –∏–∑ –∞–¥–∞–ø—Ç–µ—Ä–∞:", e);
            }
        }
        return []; // –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∞–¥–∞–ø—Ç–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
    }

    /**
     * –û—á–∏—â–∞–µ—Ç –ª–æ–≥–∏ –≤–æ –≤—Å–µ—Ö –∞–¥–∞–ø—Ç–µ—Ä–∞—Ö.
     * @returns {Promise<void>}
     */
    async clear() {
        const clearPromises = this.#adapters.map(adapter => adapter.clear());
        await Promise.allSettled(clearPromises);
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ–± –æ—á–∏—Å—Ç–∫–µ
        this.#notifySubscribers({ type: 'CLEAR_LOGS' });
    }

    // --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã ---

    /**
     * –£–¥–æ–±–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π
     */
    debug(message, options = {}) { return this.log(message, 'debug', options); }
    info(message, options = {}) { return this.log(message, 'info', options); }
    success(message, options = {}) { return this.log(message, 'success', options); }
    warn(message, options = {}) { return this.log(message, 'warn', options); }
    error(message, options = {}) { return this.log(message, 'error', options); }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∑–∞–ø–∏—Å–∏.
     * @returns {string}
     */
    #generateId() {
        return Date.now().toString(36) + Math.random().toString(36).substr(2, 9);
    }

    /**
     * –í—ã–≤–æ–¥–∏—Ç –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞.
     * @param {LogEntry} entry
     */
    #logToConsole(entry) {
        const time = new Date(entry.timestamp).toLocaleTimeString();
        const prefix = `[${time}] [${entry.level.toUpperCase()}]`;
        const suffix = entry.module ? `[${entry.module}]` : '';
        const context = entry.contextId ? `(ctx:${entry.contextId})` : '';

        const consoleMethod = entry.level === 'error' ? console.error :
            entry.level === 'warn' ? console.warn :
                entry.level === 'debug' ? console.debug : console.log;

        consoleMethod(`${prefix} ${entry.message} ${suffix} ${context}`, entry.meta || '');
    }

    /**
     * –£–≤–µ–¥–æ–º–ª—è–µ—Ç –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.
     * @param {LogEntry | { type: 'CLEAR_LOGS' }} entry
     */
    #notifySubscribers(entry) {
        this.#subscribers.forEach(callback => {
            try {
                callback(entry);
            } catch (e) {
                console.error("[Logger] –û—à–∏–±–∫–∞ –≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–µ:", e);
            }
        });
    }
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\core\logger.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\core\scenario-engine.js ===

// core/scenario-engine.js
import { logger } from '../background/background.js'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä

/**
 * @typedef {import('./types/scenario.types.js').ScenarioDefinition} ScenarioDefinition
 * @typedef {import('./types/scenario.types.js').ScenarioContext} ScenarioContext
 */

export class ScenarioEngine {
    /** @type {Map<string, { definition: ScenarioDefinition, context: ScenarioContext, controller: AbortController }>} */
    #runningScenarios = new Map();

    /**
     * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π –≤ –¥–≤–∏–∂–∫–µ.
     * @param {ScenarioDefinition} scenarioDefinition
     */
    registerScenario(scenarioDefinition) {
        // –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–ª—è UI/–≤—ã–±–æ—Ä–∞
        // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        logger.debug(`[ScenarioEngine] –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —Å—Ü–µ–Ω–∞—Ä–∏–π: ${scenarioDefinition.name}`, { module: 'ScenarioEngine' });
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π.
     * @param {ScenarioDefinition} scenarioDefinition
     * @param {Object} [params={}] - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è.
     * @param {number} [tabId] - ID –≤–∫–ª–∞–¥–∫–∏, –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ.
     * @returns {Promise<string>} ID –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è.
     */
    async run(scenarioDefinition, params = {}, tabId = null) {
        const instanceId = this.#generateId();
        const controller = new AbortController();

        /** @type {ScenarioContext} */
        const context = {
            id: instanceId,
            tabId,
            params,
            log: (message, options = {}) => {
                logger.info(message, {
                    module: options.module || `Scenario:${scenarioDefinition.id}`,
                    contextId: instanceId,
                    ...options
                });
            },
            abortSignal: async () => {
                if (controller.signal.aborted) {
                    throw new Error('–°—Ü–µ–Ω–∞—Ä–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.');
                }
            }
        };

        this.#runningScenarios.set(instanceId, { definition: scenarioDefinition, context, controller });

        context.log(`[ScenarioEngine] –ó–∞–ø—É—Å–∫ —Å—Ü–µ–Ω–∞—Ä–∏—è "${scenarioDefinition.name}" (ID: ${instanceId})`, { module: 'ScenarioEngine' });

        try {
            await scenarioDefinition.execute(context);
            context.log(`[ScenarioEngine] –°—Ü–µ–Ω–∞—Ä–∏–π "${scenarioDefinition.name}" —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω.`, { module: 'ScenarioEngine' });
        } catch (error) {
            if (error.message === '–°—Ü–µ–Ω–∞—Ä–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.') {
                context.log(`[ScenarioEngine] –°—Ü–µ–Ω–∞—Ä–∏–π "${scenarioDefinition.name}" –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.`, { module: 'ScenarioEngine', level: 'warn' });
            } else {
                context.log(`[ScenarioEngine] –û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏ "${scenarioDefinition.name}": ${error.message}`, { module: 'ScenarioEngine', level: 'error' });
                logger.error(`–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏ "${scenarioDefinition.name}": ${error.stack}`, { module: 'ScenarioEngine', contextId: instanceId });
            }
        } finally {
            this.#runningScenarios.delete(instanceId);
        }

        return instanceId;
    }

    /**
     * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π.
     * @param {string} instanceId
     * @returns {boolean} true, –µ—Å–ª–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –±—ã–ª –Ω–∞–π–¥–µ–Ω –∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.
     */
    stop(instanceId) {
        const scenarioInstance = this.#runningScenarios.get(instanceId);
        if (scenarioInstance) {
            scenarioInstance.controller.abort();
            scenarioInstance.context.log(`[ScenarioEngine] –ó–∞–ø—Ä–æ—à–µ–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è.`, { module: 'ScenarioEngine', level: 'warn' });
            return true;
        }
        logger.warn(`[ScenarioEngine] –ü–æ–ø—ã—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π (ID: ${instanceId})`, { module: 'ScenarioEngine' });
        return false;
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤.
     * @returns {Array<{id: string, name: string}>}
     */
    getRunningScenarios() {
        return Array.from(this.#runningScenarios.entries()).map(([id, { definition }]) => ({
            id,
            name: definition.name
        }));
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è.
     * @returns {string}
     */
    #generateId() {
        return `scenario_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    }
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\core\scenario-engine.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\core\types\log.types.js ===

// core/types/log.types.js

/**
 * @typedef {Object} LogEntry
 * @property {string} id - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏.
 * @property {number} timestamp - –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ (–º—Å —Å 1970).
 * @property {string} level - –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∞: 'debug', 'info', 'success', 'warn', 'error'.
 * @property {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
 * @property {string} [module] - –ú–æ–¥—É–ª—å –∏–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, —Å–æ–∑–¥–∞–≤—à–∏–π –∑–∞–ø–∏—Å—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'Parser', 'Selector').
 * @property {string} [contextId] - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ID —Å–µ—Å—Å–∏–∏ –∞–Ω–∞–ª–∏–∑–∞).
 * @property {Object} [meta] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
 */

/**
 * @typedef {Object} LoggerConfig
 * @property {number} [maxSize=1000] - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –ø–∞–º—è—Ç–∏/—Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
 * @property {boolean} [enableConsole=true] - –î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏ –≤ console.
 * @property {string} [defaultLevel='info'] - –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
 */

/**
 * @callback LogSubscriber
 * @param {LogEntry | { type: 'CLEAR_LOGS' }} entry - –ó–∞–ø–∏—Å—å –ª–æ–≥–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—á–∏—Å—Ç–∫–∏.
 * @returns {void}
 */

/**
 * @typedef {Object} LogAdapter
 * @property {function(LogEntry): Promise<void>} write - –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ª–æ–≥.
 * @property {function(): Promise<LogEntry[]>} read - –ß–∏—Ç–∞–µ—Ç –≤—Å–µ –ª–æ–≥–∏.
 * @property {function(): Promise<void>} clear - –û—á–∏—â–∞–µ—Ç –ª–æ–≥–∏.
 */

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\core\types\log.types.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\core\types\scenario.types.js ===

// core/types/scenario.types.js

/**
 * @typedef {Object} ScenarioContext
 * @property {string} id - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è.
 * @property {number} [tabId] - ID –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏, –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ.
 * @property {Object} [params] - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏—é.
 * @property {function(string, Object): void} log - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å—Ü–µ–Ω–∞—Ä–∏—è.
 * @property {function(): Promise<void>} abortSignal - –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–µ –±—ã–ª –ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É.
 */

/**
 * @typedef {Object} ScenarioDefinition
 * @property {string} id - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è.
 * @property {string} name - –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –∏–º—è —Å—Ü–µ–Ω–∞—Ä–∏—è.
 * @property {string} description - –û–ø–∏—Å–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è.
 * @property {function(ScenarioContext): Promise<void>} execute - –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è.
 */

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\core\types\scenario.types.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\popup.css ===

/* popup/popup.css */
:root {
    --primary: #4338ca;
    --primary-hover: #3730a3;
    --success: #16a34a;
    --success-hover: #15803d;
    --warning: #ca8a04;
    --warning-hover: #a16207;
    --danger: #dc2626;
    --danger-hover: #b91c1c;
    --info: #0284c7;
    --info-hover: #0369a1;
    --secondary: #64748b;
    --secondary-hover: #475569;
    --bg: #ffffff;
    --card: #f9fafb;
    --text: #111827;
    --border: #e5e7eb;
    --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: var(--bg);
    color: var(--text);
    padding: 16px;
    width: 800px;
    height: 720px;
    overflow: hidden;
}

.app-container {
    display: flex;
    flex-direction: column;
    gap: 16px;
    height: 100%;
    overflow: hidden;
}

.app-title {
    font-size: 20px;
    font-weight: 600;
    color: var(--primary);
    margin-bottom: 16px;
    text-align: center;
}

.section {
    background: var(--card);
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 16px;
    box-shadow: var(--shadow);
    flex-shrink: 0;
}

.section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
}

#logSection .section-header {
    margin-bottom: 8px;
}

.section-title {
    font-size: 16px;
    font-weight: 600;
    color: var(--text);
}

#logSection {
    /* –ü–æ–∑–≤–æ–ª—è–µ–º —Å–µ–∫—Ü–∏–∏ –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞—Å—Ç–∏ –∏ —Å–∂–∏–º–∞—Ç—å—Å—è */
    flex: 1;
    /* –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è */
    min-height: 150px;
    /* –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞, —á—Ç–æ–±—ã –±—ã–ª –≤–∏–¥–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ª–æ–≥ */
    /* max-height: 300px; */
    /* –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É */
    display: flex;
    flex-direction: column;
    overflow: hidden;
    /* –°–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä–µ–ø–æ–ª–Ω—è—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–∞–º–æ–π —Å–µ–∫—Ü–∏–∏ */
}



.toggle-btn {
    background: none;
    border: none;
    font-size: 16px;
    cursor: pointer;
    color: var(--secondary);
    padding: 4px 8px;
    border-radius: 6px;
}

.toggle-btn:hover {
    background: var(--border);
}

/* –°—Ç–∏–ª—å –¥–ª—è —Å–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –±–ª–æ–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */
.settings-section.collapsed #settingsContent {
    display: none;
}

.setting-item {
    margin-bottom: 16px;
}

.setting-label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: var(--text);
}

.radio-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.radio-label {
    display: flex;
    align-items: center;
    gap: 8px;
    cursor: pointer;
    padding: 4px 8px;
    border-radius: 6px;
}

.radio-label:hover {
    background: var(--border);
}

.input-field {
    width: 100%;
    max-width: 200px;
    padding: 8px 12px;
    border: 1px solid var(--border);
    border-radius: 8px;
    font-size: 14px;
}

.import-textarea {
    width: 100%;
    min-height: 120px;
    padding: 12px;
    border: 1px solid var(--border);
    border-radius: 8px;
    font-family: monospace;
    font-size: 13px;
    resize: vertical;
    margin-bottom: 12px;
}

.button-group {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 8px;
}

.btn {
    padding: 8px 16px;
    border: none;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    white-space: nowrap;
}

.btn:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow);
}

.btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.btn-primary {
    background: var(--primary);
    color: white;
}

.btn-primary:hover {
    background: var(--primary-hover);
}

.btn-success {
    background: var(--success);
    color: white;
}

.btn-success:hover {
    background: var(--success-hover);
}

.btn-warning {
    background: var(--warning);
    color: white;
}

.btn-warning:hover {
    background: var(--warning-hover);
}

.btn-danger {
    background: var(--danger);
    color: white;
}

.btn-danger:hover {
    background: var(--danger-hover);
}

.btn-info {
    background: var(--info);
    color: white;
}

.btn-info:hover {
    background: var(--info-hover);
}

.btn-secondary {
    background: var(--secondary);
    color: white;
}

.btn-secondary:hover {
    background: var(--secondary-hover);
}

/* –ñ—É—Ä–Ω–∞–ª */
.log-container {
    padding: 12px;
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;
    min-height: 0;
    background: white;
    border: 1px solid var(--border);
    border-radius: 8px;
    font-size: 12px;
    line-height: 1.5;
}

.log-entry {
    padding: 6px 0;
    border-bottom: 1px solid var(--border);
    font-family: monospace;
}

.log-entry:last-child {
    border-bottom: none;
}

.log-level-info {
    color: var(--text);
}

.log-level-success {
    color: var(--success);
    font-weight: 500;
}

.log-level-warn {
    color: var(--warning);
}

.log-level-error {
    color: var(--danger);
    font-weight: 500;
}

/* Placeholder –¥–ª—è –∂—É—Ä–Ω–∞–ª–∞ */
.log-placeholder {
    color: var(--secondary);
    font-style: italic;
    text-align: center;
    padding: 20px 0;
}

#tableSection {
    /* –ü–æ–∑–≤–æ–ª—è–µ–º —Å–µ–∫—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã —Ç–æ–∂–µ —Ä–∞—Å—Ç–∏ –∏ —Å–∂–∏–º–∞—Ç—å—Å—è, –Ω–æ —Å –º–µ–Ω—å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º */
    flex: 2;
    /* –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ */
    min-height: 150px;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    /* –°–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä–µ–ø–æ–ª–Ω—è—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–∞–º–æ–π —Å–µ–∫—Ü–∏–∏ */
}

#tableSection .section-header {
    margin-bottom: 8px;
}

/* –¢–∞–±–ª–∏—Ü–∞ */
.table-container {
    flex: 1;
    overflow: auto;
    min-height: 0;
    border: 1px solid var(--border);
    border-radius: 8px;
}

.data-table {
    width: 100%;
    border-collapse: collapse;
    font-size: 12px;
    height: 100%;
}

.data-table th,
.data-table td {
    padding: 8px;
    text-align: left;
    border: 1px solid var(--border);
}

.data-table th {
    background-color: var(--card);
    font-weight: 600;
    position: sticky;
    top: 0;
    z-index: 1;
}

.data-table tr:nth-child(even) {
    background-color: #fafafa;
}

/* Placeholder –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã */
.table-placeholder td {
    text-align: center;
    color: var(--secondary);
    font-style: italic;
    padding: 40px 20px;
}

.data-table img {
    width: 60px;
    height: 34px;
    object-fit: cover;
    border-radius: 4px;
}

/* –°–∫—Ä–æ–ª–ª–±–∞—Ä—ã */
.log-container::-webkit-scrollbar,
.table-container::-webkit-scrollbar {
    width: 6px;
}

.log-container::-webkit-scrollbar-thumb,
.table-container::-webkit-scrollbar-thumb {
    background-color: var(--border);
    border-radius: 3px;
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\popup.css ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\popup.html ===

<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YouTube –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ü–∞—Ä—Å–µ—Ä</title>
    <link rel="stylesheet" href="popup.css">
</head>

<body>
    <div class="app-container">
        <header class="app-header">
            <h1 class="app-title">üìπ YouTube –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ü–∞—Ä—Å–µ—Ä</h1>
        </header>

        <!-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (Collapsible) -->
        <section id="settingsSection" class="section settings-section">
            <div class="section-header">
                <h2 class="section-title">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
                <button id="toggleSettingsBtn" class="toggle-btn">‚ñ≤</button>
            </div>
            <div id="settingsContent" class="section-content">
                <!-- –ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã–±–æ—Ä–∞ -->
                <div class="setting-item">
                    <label class="setting-label">–ê–ª–≥–æ—Ä–∏—Ç–º –≤—ã–±–æ—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–µ–æ:</label>
                    <div class="radio-group">
                        <label class="radio-label">
                            <input type="radio" name="selectionMode" value="smart" checked>
                            –£–º–Ω—ã–π (–ø–æ –≤—Å–µ–º –¥–∞–Ω–Ω—ã–º)
                        </label>
                        <label class="radio-label">
                            <input type="radio" name="selectionMode" value="batch">
                            –ò–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–¥–±–æ—Ä–∫–∏
                        </label>
                    </div>
                </div>

                <!-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π -->
                <div class="setting-item">
                    <label class="setting-label" for="iterationsInput">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π:</label>
                    <input type="number" id="iterationsInput" class="input-field" value="10" min="1" max="1000">
                </div>

                <!-- –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö -->
                <div class="setting-item">
                    <label class="setting-label">–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö (CSV/TSV):</label>
                    <textarea id="importTextarea" class="import-textarea"
                        placeholder="–í—Å—Ç–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ... –ù–∞–∑–≤–∞–Ω–∏–µ,ID,–ü—Ä–æ—Å–º–æ—Ç—Ä—ã,–ö–∞–Ω–∞–ª,–ò—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ,–ú–∏–Ω–∏–∞—Ç—é—Ä–∞"></textarea>
                    <div class="button-group">
                        <button id="importDataBtn" class="btn btn-primary">üìÇ –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</button>
                        <button id="clearImportedBtn" class="btn btn-secondary">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ</button>
                    </div>
                </div>
            </div>
        </section>

        <!-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ -->
        <section id="controlSection" class="section control-section">
            <div class="section-header">
                <h2 class="section-title">üéõÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h2>
            </div>
            <div class="button-group">
                <button id="startBtn" class="btn btn-success">‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥</button>
                <button id="stopBtn" class="btn btn-warning" disabled>‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å</button>
                <button id="copyTableBtn" class="btn btn-info">üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É</button>
                <button id="clearTableBtn" class="btn btn-danger">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É</button>
                <button id="clearLogBtn" class="btn btn-secondary">üßπ –û—á–∏—Å—Ç–∏—Ç—å –∂—É—Ä–Ω–∞–ª</button>
                <button id="runTestScenarioBtn" class="btn btn-primary">üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π</button>
            </div>
        </section>

        <!-- –ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π -->
        <section id="logSection" class="section log-section">
            <div class="section-header">
                <h2 class="section-title">üìã –ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π</h2>
            </div>
            <div id="logContainer" class="log-container">
                <!-- –õ–æ–≥–∏ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª—è—Ç—å—Å—è —Å—é–¥–∞ -->
                <div class="log-placeholder">–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç</div>
            </div>
        </section>

        <!-- –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö -->
        <section id="tableSection" class="section table-section">
            <div class="section-header">
                <h2 class="section-title">üìä –°–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>
            </div>
            <div class="table-container">
                <table id="dataTable" class="data-table">
                    <thead>
                        <tr>
                            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                            <th>ID</th>
                            <th>–ü—Ä–æ—Å–º–æ—Ç—Ä—ã</th>
                            <th>–ö–∞–Ω–∞–ª</th>
                            <th>–ò—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ</th>
                            <th>–ú–∏–Ω–∏–∞—Ç—é—Ä–∞</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        <!-- –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª—è—Ç—å—Å—è —Å—é–¥–∞ -->
                        <tr class="table-placeholder">
                            <td colspan="6">–¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </section>
    </div>

    <script type="module" src="./popup.js"></script>
</body>

</html>

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\popup.html ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\popup.js ===

// popup/popup.js
class PopupApp {
    constructor() {
        this.initElements();
        this.bindEvents(); // –ó–¥–µ—Å—å –¥–æ–±–∞–≤–∏–º —Å–ª—É—à–∞—Ç–µ–ª—å
        this.loadState();
        this.updateTable(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É
        this.updateLogs();  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏ (–Ω–æ –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª—É—à–∞—Ç–µ–ª—è)
    }

    initElements() {
        this.settingsSection = document.getElementById('settingsSection');
        this.settingsContent = document.getElementById('settingsContent');
        this.toggleSettingsBtn = document.getElementById('toggleSettingsBtn');

        this.selectionModeRadios = document.querySelectorAll('input[name="selectionMode"]');
        this.iterationsInput = document.getElementById('iterationsInput');
        this.importTextarea = document.getElementById('importTextarea');
        this.importDataBtn = document.getElementById('importDataBtn');
        this.clearImportedBtn = document.getElementById('clearImportedBtn');

        this.startBtn = document.getElementById('startBtn');
        this.stopBtn = document.getElementById('stopBtn');
        this.copyTableBtn = document.getElementById('copyTableBtn');
        this.clearTableBtn = document.getElementById('clearTableBtn');
        this.clearLogBtn = document.getElementById('clearLogBtn');

        // üëá –ù–û–í–û–ï: –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
        this.runTestScenarioBtn = document.getElementById('runTestScenarioBtn');

        this.logContainer = document.getElementById('logContainer');
        this.tableBody = document.getElementById('tableBody');
    }

    bindEvents() {
        this.toggleSettingsBtn.addEventListener('click', () => this.toggleSettings());

        this.selectionModeRadios.forEach(radio => {
            radio.addEventListener('change', () => this.saveSettings());
        });
        this.iterationsInput.addEventListener('change', () => this.saveSettings());
        this.importDataBtn.addEventListener('click', () => this.handleImport());
        this.clearImportedBtn.addEventListener('click', () => this.handleClearImported());

        this.startBtn.addEventListener('click', () => this.handleStart());
        this.stopBtn.addEventListener('click', () => this.handleStop());
        this.copyTableBtn.addEventListener('click', () => this.handleCopyTable());
        this.clearTableBtn.addEventListener('click', () => this.handleClearTable());
        this.clearLogBtn.addEventListener('click', () => this.handleClearLog());

        // üëá –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
        if (this.runTestScenarioBtn) {
            this.runTestScenarioBtn.addEventListener('click', () => this.handleRunTestScenario());
        }

        // üëá –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π –û–î–ò–ù –†–ê–ó –∑–¥–µ—Å—å
        this.addMessageListener();
    }

    // --- State Management ---
    saveSettings() {
        const state = {
            isSettingsCollapsed: this.settingsSection.classList.contains('collapsed'),
            selectionMode: document.querySelector('input[name="selectionMode"]:checked')?.value || 'smart',
            iterations: this.iterationsInput.value,
        };
        localStorage.setItem('popupSettings', JSON.stringify(state));
    }

    loadState() {
        const saved = localStorage.getItem('popupSettings');
        if (saved) {
            const state = JSON.parse(saved);

            if (state.isSettingsCollapsed) {
                this.settingsSection.classList.add('collapsed');
                this.toggleSettingsBtn.textContent = 'üîΩ';
            }

            if (state.selectionMode) {
                const radio = document.querySelector(`input[name="selectionMode"][value="${state.selectionMode}"]`);
                if (radio) radio.checked = true;
            }

            if (state.iterations) {
                this.iterationsInput.value = state.iterations;
            }
        }
    }

    // --- UI Actions ---
    toggleSettings() {
        this.settingsSection.classList.toggle('collapsed');
        const isCollapsed = this.settingsSection.classList.contains('collapsed');
        this.toggleSettingsBtn.textContent = isCollapsed ? 'üîΩ' : '‚ñ≤';
        this.saveSettings();
    }

    // --- Data Handling (Mock for now) ---
    async updateTable(data = null) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ background/storage
        if (!data) {
            // –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            // data = await chrome.runtime.sendMessage({action: "getData"});
            // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–ª–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
            try {
                // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ chrome.storage.local
                const result = await chrome.storage.local.get(['parsedVideos']);
                data = result.parsedVideos || [];
            } catch (e) {
                console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ storage:", e);
                data = []; // fallback
            }
        }

        this.tableBody.innerHTML = '';
        if (!data || data.length === 0) {
            const placeholderRow = document.createElement('tr');
            placeholderRow.className = 'table-placeholder';
            placeholderRow.innerHTML = `<td colspan="6">–¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞</td>`;
            this.tableBody.appendChild(placeholderRow);
        } else {
            data.slice(0, 50).forEach(video => { // –û–≥—Ä–∞–Ω–∏—á–∏–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–¥–µ–π—Å—Ç–≤–∏—è
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${this.escapeHtml(video.title || '')}</td>
                    <td>${this.escapeHtml(video.videoId || '')}</td>
                    <td>${this.escapeHtml(video.views || '')}</td>
                    <td>${this.escapeHtml(video.channelName || '')}</td>
                    <td>${this.escapeHtml(video.sourceVideoId || '')}</td>
                    <td>
                        ${video.thumbnailUrl ?
                        `<img src="${video.thumbnailUrl}" alt="Thumbnail" onerror="this.parentElement.innerHTML='‚Äî'">` :
                        '‚Äî'}
                    </td>
                `;
                this.tableBody.appendChild(row);
            });
        }
    }

    async updateLogs() {
        console.log("updateLogs called"); // <-- –õ–æ–≥
        let logs = [];
        try {
            console.log("–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ –∏–∑ chrome.storage.local..."); // <-- –õ–æ–≥
            const result = await chrome.storage.local.get(['appLogs']);
            console.log("–õ–æ–≥–∏ –∏–∑ storage –ø–æ–ª—É—á–µ–Ω—ã:", result); // <-- –õ–æ–≥
            logs = result.appLogs || [];
        } catch (e) {
            console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ –∏–∑ storage:", e);
            // –î–æ–±–∞–≤–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥
            logs = [{ message: "–ñ—É—Ä–Ω–∞–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω", level: "info", timestamp: Date.now() }];
        }

        this.logContainer.innerHTML = '';
        if (!logs || logs.length === 0) {
            console.log("–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º placeholder"); // <-- –õ–æ–≥
            const placeholder = document.createElement('div');
            placeholder.className = 'log-placeholder';
            placeholder.textContent = '–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç';
            this.logContainer.appendChild(placeholder);
        } else {
            logs.slice(-100).forEach(log => { // –ü–æ–∫–∞–∂–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100
                this.addLog(log);
            });
            console.log(`–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${logs.length} –∑–∞–ø–∏—Å–µ–π –≤ –∂—É—Ä–Ω–∞–ª–µ`); // <-- –õ–æ–≥
        }
        // –£–±–∏—Ä–∞–µ–º –≤—ã–∑–æ–≤ startListeningForLogs –æ—Ç—Å—é–¥–∞
    }

    startListeningForLogs() {
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç background
        chrome.runtime.onMessage.addListener((request) => {
            if (request.type === 'newLog' && request.log) {
                this.renderLogEntry(request.log);
            }
            if (request.type === 'logsCleared') {
                this.logContainer.innerHTML = '<div class="log-placeholder">–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç</div>';
            }
            // TODO: –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (dataUpdated, analysisStatus –∏ —Ç.–¥.)
        });
    }

    addLog({ message, level = 'info', timestamp = Date.now() }) {
        // –£–¥–∞–ª—è–µ–º placeholder, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        const placeholder = this.logContainer.querySelector('.log-placeholder');
        if (placeholder) {
            placeholder.remove();
        }

        const entry = document.createElement('div');
        entry.className = `log-entry log-level-${level}`;
        const time = new Date(timestamp).toLocaleTimeString();
        entry.textContent = `[${time}] ${message}`;
        this.logContainer.appendChild(entry);
        this.logContainer.scrollTop = this.logContainer.scrollHeight;
    }

    escapeHtml(text) {
        if (typeof text !== 'string') return '';
        return text
            .replace(/&/g, "&amp;")
            .replace(/</g, "<")
            .replace(/>/g, ">")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }

    // --- Button Handlers ---
    // (–æ—Å—Ç–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–∞–∫ –µ—Å—Ç—å, –æ–Ω–∏ –∏–º–∏—Ç–∏—Ä—É—é—Ç —Ä–∞–±–æ—Ç—É)
    handleImport() {
        const text = this.importTextarea.value.trim();
        if (!text) {
            this.addLog({ message: '‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞', level: 'error' });
            return;
        }
        this.addLog({ message: `‚úÖ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö (–∏–º–∏—Ç–∞—Ü–∏—è): ${text.split('\n').length - 1} —Å—Ç—Ä–æ–∫`, level: 'success' });
        this.importTextarea.value = '';
        setTimeout(() => this.updateTable(), 500);
    }

    handleClearImported() {
        this.addLog({ message: '‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã (–∏–º–∏—Ç–∞—Ü–∏—è)', level: 'success' });
    }

    handleStart() {
        const iterations = parseInt(this.iterationsInput.value) || 10;
        const mode = document.querySelector('input[name="selectionMode"]:checked')?.value || 'smart';
        this.addLog({ message: `üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞: ${iterations} –∏—Ç–µ—Ä–∞—Ü–∏–π, —Ä–µ–∂–∏–º: ${mode}`, level: 'info' });
        this.startBtn.disabled = true;
        this.stopBtn.disabled = false;
        setTimeout(() => {
            this.addLog({ message: 'üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω (–∏–º–∏—Ç–∞—Ü–∏—è)', level: 'success' });
            this.startBtn.disabled = false;
            this.stopBtn.disabled = true;
            this.updateTable();
        }, 3000);
    }

    handleStop() {
        this.addLog({ message: '‚èπÔ∏è –ê–Ω–∞–ª–∏–∑ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∏–º–∏—Ç–∞—Ü–∏—è)', level: 'warn' });
        this.startBtn.disabled = false;
        this.stopBtn.disabled = true;
    }

    async handleCopyTable() {
        try {
            const result = await chrome.storage.local.get(['parsedVideos']);
            const data = result.parsedVideos || [];
            if (data.length === 0) {
                this.addLog({ message: '‚ùå –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞, –Ω–µ—á–µ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å', level: 'error' });
                return;
            }
            const headers = ['–ù–∞–∑–≤–∞–Ω–∏–µ', 'ID', '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã', '–ö–∞–Ω–∞–ª', '–ò—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ', '–ú–∏–Ω–∏–∞—Ç—é—Ä–∞'];
            const rows = data.map(v => [
                v.title || '', v.videoId || '', v.views || '', v.channelName || '', v.sourceVideoId || '', v.thumbnailUrl || ''
            ]);
            const tsvContent = [headers.join('\t'), ...rows.map(r => r.join('\t'))].join('\n');
            await navigator.clipboard.writeText(tsvContent);
            this.addLog({ message: `‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ (${data.length} —Å—Ç—Ä–æ–∫)`, level: 'success' });
        } catch (err) {
            this.addLog({ message: `‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ${err.message}`, level: 'error' });
        }
    }

    async handleClearTable() {
        try {
            await chrome.storage.local.remove(['parsedVideos']);
            this.addLog({ message: '‚úÖ –¢–∞–±–ª–∏—Ü–∞ –æ—á–∏—â–µ–Ω–∞', level: 'success' });
            this.updateTable([]);
        } catch (err) {
            this.addLog({ message: `‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–±–ª–∏—Ü—ã: ${err.message}`, level: 'error' });
        }
    }

    async handleClearLog() {
        try {
            await chrome.storage.local.remove(['appLogs']);
            this.addLog({ message: '‚úÖ –ñ—É—Ä–Ω–∞–ª –æ—á–∏—â–µ–Ω', level: 'success' });
            this.updateLogs();
        } catch (err) {
            this.addLog({ message: `‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∂—É—Ä–Ω–∞–ª–∞: ${err.message}`, level: 'error' });
        }
    }

    // üëá –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
    async handleRunTestScenario() {
        this.addLog({ message: "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è...", level: "info" });
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ background
            await chrome.runtime.sendMessage({
                action: "runTestScenario"
            });
            this.addLog({ message: "‚úÖ –ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.", level: "success" });
        } catch (err) {
            this.addLog({ message: `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã: ${err.message}`, level: "error" });
        }
    }

    addMessageListener() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–µ–ª–æ—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã `this` —Å—Å—ã–ª–∞–ª—Å—è –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä PopupApp
        this.messageListener = (request, sender, sendResponse) => {
            console.log("Popup received message:", request); // <-- –õ–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            if (request.type === 'newLog' && request.log) {
                console.log("Handling newLog message in PopupApp"); // <-- –õ–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                this.addLog(request.log);
            }
            if (request.type === 'logsCleared') {
                console.log("Handling logsCleared message in PopupApp"); // <-- –õ–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                if (this.logContainer) {
                    this.logContainer.innerHTML = '<div class="log-placeholder">–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç</div>';
                }
            }
            // –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–¥–µ—Å—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            // if (request.type === 'analysisStatus') { ... }
            // if (request.type === 'dataUpdated') { ... }
        };

        chrome.runtime.onMessage.addListener(this.messageListener);
        console.log("PopupApp: Message listener added"); // <-- –õ–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
document.addEventListener('DOMContentLoaded', () => {
    new PopupApp();
});


=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\popup.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\components\ControlSection.js ===

export class ControlSection {
    constructor() {
        this.startBtn = document.getElementById('startBtn');
        this.stopBtn = document.getElementById('stopBtn');
        this.copyTableBtn = document.getElementById('copyTableBtn');
        this.clearTableBtn = document.getElementById('clearTableBtn');
        this.clearLogBtn = document.getElementById('clearLogBtn');

        this.init();
    }

    init() {
        this.startBtn.addEventListener('click', () => this.handleStart());
        this.stopBtn.addEventListener('click', () => this.handleStop());
        this.copyTableBtn.addEventListener('click', () => this.handleCopyTable());
        this.clearTableBtn.addEventListener('click', () => this.handleClearTable());
        this.clearLogBtn.addEventListener('click', () => this.handleClearLog());
    }

    handleStart() {
        const iterations = parseInt(document.getElementById('iterationsInput').value) || 10;
        const mode = document.querySelector('input[name="selectionMode"]:checked')?.value || 'smart';

        this.dispatchEvent('startAnalysis', { iterations, mode });
        this.startBtn.disabled = true;
        this.stopBtn.disabled = false;
    }

    handleStop() {
        this.dispatchEvent('stopAnalysis');
        this.startBtn.disabled = false;
        this.stopBtn.disabled = true;
    }

    handleCopyTable() {
        this.dispatchEvent('copyTable');
    }

    handleClearTable() {
        this.dispatchEvent('clearTable');
    }

    handleClearLog() {
        this.dispatchEvent('clearLog');
    }

    enableStart() {
        this.startBtn.disabled = false;
        this.stopBtn.disabled = true;
    }

    disableStart() {
        this.startBtn.disabled = true;
        this.stopBtn.disabled = false;
    }

    dispatchEvent(type, detail) {
        document.dispatchEvent(new CustomEvent(type, { detail }));
    }
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\components\ControlSection.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\components\LogSection.js ===

export class LogSection {
    constructor() {
        this.container = document.getElementById('logContainer');
        this.init();
    }

    init() {
        // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ª–æ–≥–æ–≤
        document.addEventListener('log', (e) => this.addLog(e.detail));
        document.addEventListener('clearLog', () => this.clear());
    }

    addLog({ message, level = 'info', timestamp = Date.now() }) {
        const entry = document.createElement('div');
        entry.className = `log-entry log-level-${level}`;
        const time = new Date(timestamp).toLocaleTimeString();
        entry.textContent = `[${time}] ${message}`;
        this.container.appendChild(entry);
        this.container.scrollTop = this.container.scrollHeight;
    }

    clear() {
        this.container.innerHTML = '';
        this.addLog({ message: 'üßπ –ñ—É—Ä–Ω–∞–ª –æ—á–∏—â–µ–Ω', level: 'info' });
    }
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\components\LogSection.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\components\SettingsSection.js ===

export class SettingsSection {
    constructor() {
        this.element = document.getElementById('settingsSection');
        this.toggleBtn = document.getElementById('toggleSettingsBtn');
        this.selectionModeRadios = document.querySelectorAll('input[name="selectionMode"]');
        this.iterationsInput = document.getElementById('iterationsInput');
        this.importTextarea = document.getElementById('importTextarea');
        this.importDataBtn = document.getElementById('importDataBtn');
        this.clearImportedBtn = document.getElementById('clearImportedBtn');

        this.init();
    }

    init() {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ localStorage
        this.restoreState();

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        this.toggleBtn.addEventListener('click', () => this.toggle());
        this.selectionModeRadios.forEach(radio => {
            radio.addEventListener('change', () => this.saveState());
        });
        this.iterationsInput.addEventListener('change', () => this.saveState());
        this.importDataBtn.addEventListener('click', () => this.handleImport());
        this.clearImportedBtn.addEventListener('click', () => this.handleClearImported());

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
        this.iterationsInput.addEventListener('blur', () => this.saveState());
    }

    toggle() {
        const isCollapsed = this.element.classList.contains('collapsed');
        if (isCollapsed) {
            this.expand();
        } else {
            this.collapse();
        }
        this.saveState();
    }

    collapse() {
        this.element.classList.add('collapsed');
        this.toggleBtn.textContent = 'üîΩ';
    }

    expand() {
        this.element.classList.remove('collapsed');
        this.toggleBtn.textContent = '‚ñ≤';
    }

    saveState() {
        const state = {
            isCollapsed: this.element.classList.contains('collapsed'),
            selectionMode: document.querySelector('input[name="selectionMode"]:checked')?.value || 'smart',
            iterations: this.iterationsInput.value,
        };
        localStorage.setItem('settingsState', JSON.stringify(state));
    }

    restoreState() {
        const saved = localStorage.getItem('settingsState');
        if (saved) {
            const state = JSON.parse(saved);
            if (state.isCollapsed) {
                this.collapse();
            } else {
                this.expand();
            }
            if (state.selectionMode) {
                const radio = document.querySelector(`input[name="selectionMode"][value="${state.selectionMode}"]`);
                if (radio) radio.checked = true;
            }
            if (state.iterations) {
                this.iterationsInput.value = state.iterations;
            }
        }
    }

    handleImport() {
        const text = this.importTextarea.value.trim();
        if (!text) {
            this.dispatchEvent('log', { message: '‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞', level: 'error' });
            return;
        }

        try {
            const data = this.parseCSV(text);
            this.dispatchEvent('importData', { data });
            this.importTextarea.value = '';
            this.dispatchEvent('log', { message: `‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${data.length} –∑–∞–ø–∏—Å–µ–π`, level: 'success' });
        } catch (err) {
            this.dispatchEvent('log', { message: `‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: ${err.message}`, level: 'error' });
        }
    }

    handleClearImported() {
        this.dispatchEvent('clearImported');
        this.dispatchEvent('log', { message: '‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã', level: 'success' });
    }

    parseCSV(text) {
        const lines = text.split(/\r?\n/);
        if (lines.length === 0) throw new Error('–ü—É—Å—Ç–æ–π —Ñ–∞–π–ª');

        const headers = lines[0].split(/\t|,/).map(h => h.trim().toLowerCase());
        const required = ['–Ω–∞–∑–≤–∞–Ω–∏–µ', 'id', '–ø—Ä–æ—Å–º–æ—Ç—Ä—ã', '–∫–∞–Ω–∞–ª', '–∏—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ', '–º–∏–Ω–∏–∞—Ç—é—Ä–∞'];

        const fieldMap = {
            '–Ω–∞–∑–≤–∞–Ω–∏–µ': 'title',
            'id': 'videoId',
            '–ø—Ä–æ—Å–º–æ—Ç—Ä—ã': 'views',
            '–∫–∞–Ω–∞–ª': 'channelName',
            '–∏—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ': 'sourceVideoId',
            '–º–∏–Ω–∏–∞—Ç—é—Ä–∞': 'thumbnailUrl'
        };

        const indices = {};
        required.forEach(field => {
            const index = headers.findIndex(h => h === field);
            if (index === -1) throw new Error(`–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞: ${field}`);
            indices[field] = index;
        });

        const data = [];
        for (let i = 1; i < lines.length; i++) {
            if (!lines[i].trim()) continue;
            const cells = lines[i].split(/\t|,/);
            const item = {};
            required.forEach(field => {
                const index = indices[field];
                item[fieldMap[field]] = cells[index] ? cells[index].trim() : '';
            });
            data.push(item);
        }
        return data;
    }

    dispatchEvent(type, detail) {
        document.dispatchEvent(new CustomEvent(type, { detail }));
    }
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\components\SettingsSection.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\components\TableSection.js ===

export class TableSection {
    constructor() {
        this.tableBody = document.getElementById('tableBody');
        this.init();
    }

    init() {
        document.addEventListener('updateTable', (e) => this.render(e.detail));
        document.addEventListener('clearTable', () => this.clear());
    }

    render(data = []) {
        this.tableBody.innerHTML = '';
        if (data.length === 0) {
            this.tableBody.innerHTML = '<tr><td colspan="6" style="text-align: center; padding: 20px;">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</td></tr>';
            return;
        }

        data.forEach(video => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${this.escapeHtml(video.title || '')}</td>
                <td>${video.videoId || ''}</td>
                <td>${video.views || ''}</td>
                <td>${this.escapeHtml(video.channelName || '')}</td>
                <td>${video.sourceVideoId || ''}</td>
                <td>
                    ${video.thumbnailUrl ?
                    `<img src="${video.thumbnailUrl}" alt="Thumbnail">` :
                    '‚Äî'}
                </td>
            `;
            this.tableBody.appendChild(row);
        });
    }

    clear() {
        this.render([]);
    }

    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }
}

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\popup\components\TableSection.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\scenarios\test-countdown.js ===

// scenarios/test-countdown.js
import { logger } from '../background/background.js'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä –∏–∑ background

/**
 * @type {import('../core/types/scenario.types.js').ScenarioDefinition}
 */
export const testCountdownScenario = {
    id: 'test-countdown',
    name: '–¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç',
    description: '–°—á–∏—Ç–∞–µ—Ç –æ—Ç 1 –¥–æ 10, –ª–æ–≥–∏—Ä—É—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É.',

    /**
     * @param {import('../core/types/scenario.types.js').ScenarioContext} context
     */
    async execute(context) {
        const { log, abortSignal } = context;
        const maxCount = 10;

        log(`üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–ø—É—â–µ–Ω. –ù–∞—á–∏–Ω–∞—é –æ—Ç—Å—á–µ—Ç –¥–æ ${maxCount}.`, { module: 'TestScenario' });

        for (let i = 1; i <= maxCount; i++) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É
            await abortSignal();

            log(`‚è±Ô∏è –®–∞–≥ ${i}/${maxCount}`, { module: 'TestScenario' });

            // –ñ–¥–µ–º 1 —Å–µ–∫—É–Ω–¥—É
            await new Promise(resolve => setTimeout(resolve, 1000));
        }

        log(`üéâ –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω.`, { module: 'TestScenario' });
    }
};

=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\scenarios\test-countdown.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\shared\logger.js ===



=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\shared\logger.js ===

--------------------------------------------------------------------------------

=== START FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\shared\storage.js ===



=== END FILE: D:\—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞\youtube-parser-os\shared\storage.js ===

--------------------------------------------------------------------------------

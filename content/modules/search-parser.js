// content/modules/search-parser.js

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥—Å–≤–µ—á–µ–Ω–∞ –ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ –∏–ª–∏ –µ—ë —Ä–æ–¥–∏—Ç–µ–ª—å.
 * @param {HTMLElement} el
 * @returns {boolean}
 */
function isAlreadyHighlightedOrHasHighlightedParent(el) {
    if (el.classList.contains('video-highlighted')) return true;
    let parent = el.parentElement;
    while (parent) {
        if (parent.classList?.contains('video-highlighted')) return true;
        parent = parent.parentElement;
    }
    return false;
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É –∫ —ç–ª–µ–º–µ–Ω—Ç—É.
 * @param {HTMLElement} el
 */
function highlightElement(el) {
    if (isAlreadyHighlightedOrHasHighlightedParent(el)) {
        return;
    }
    const box = document.createElement('div');
    Object.assign(box.style, {
        position: 'absolute',
        border: '3px solid #ff4d4d',
        pointerEvents: 'none',
        zIndex: '999999',
        borderRadius: '8px',
        top: '0',
        left: '0',
        width: '100%',
        height: '100%',
        boxShadow: '0 0 8px rgba(255, 77, 77, 0.6)',
        boxSizing: 'border-box'
    });
    const computedStyle = window.getComputedStyle(el);
    if (!computedStyle.position || computedStyle.position === 'static') {
        el.style.position = 'relative';
    }
    el.style.overflow = 'visible';
    el.appendChild(box);
    el.classList.add('video-highlighted');
}

/**
 * –§–∏–ª—å—Ç—Ä—É–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ.
 * –ò—Å–∫–ª—é—á–∞–µ—Ç –∫–∞–Ω–∞–ª—ã, –Ω–∞—Å—Ç–æ—è—â–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã, shorts, —Å—Ç—Ä–∏–º—ã –∏ —Ä–µ–∫–ª–∞–º—É.
 * @param {HTMLElement} card
 * @returns {boolean}
 */
function isVideoCard(card) {
    // 1. –ò—Å–∫–ª—é—á–∞–µ–º Shorts
    if (card.querySelector('a[href*="/shorts/"]') || card.closest('[is-shorts]')) {
        return false;
    }

    // 2. –ò—Å–∫–ª—é—á–∞–µ–º Live
    if (card.querySelector('[aria-label*="LIVE" i]')) {
        return false;
    }

    // 3. –ò—Å–∫–ª—é—á–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç—ã (–Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏)
    if (card.querySelector('yt-collection-thumbnail-view-model, [title*="Mix" i]')) {
        return false;
    }

    // 4. –ò—Å–∫–ª—é—á–∞–µ–º –∫–∞–Ω–∞–ª—ã (–∏—â–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ –∫–∞–Ω–∞–ª–∞)
    if (card.querySelector('ytd-channel-renderer, [href*="/channel/"], [href*="/c/"], [href*="/user/"]')) {
        return false;
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ /watch?v= (–∞ –Ω–µ –Ω–∞ /channel –∏ —Ç.–ø.)
    const watchLink = card.querySelector('a[href*="/watch?v="]');
    if (!watchLink) {
        return false;
    }

    // 6. –ò—Å–∫–ª—é—á–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç—ã —Ç–∏–ø–∞ PL...
    try {
        const url = new URL(watchLink.href, 'https://www.youtube.com');
        const listParam = url.searchParams.get('list');
        if (listParam && listParam.startsWith('PL')) {
            return false;
        }
    } catch (e) {
        console.warn("[SearchParser] –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ URL:", e);
    }

    return true;
}

/**
 * –ù–∞—Ö–æ–¥–∏—Ç –∏ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–∏–¥–µ–æ –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–µ YouTube.
 * @returns {HTMLElement[]} –º–∞—Å—Å–∏–≤ DOM-—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤–∏–¥–µ–æ
 */
function parseAndHighlightSearchResults() {
    console.log("[SearchParser] === –ù–ê–ß–ê–õ–û –ü–ê–†–°–ò–ù–ì–ê –ü–û–ò–°–ö–û–í–û–ô –í–´–î–ê–ß–ò ===");

    // 1. –ù–∞—Ö–æ–¥–∏–º –í–°–ï —ç–ª–µ–º–µ–Ω—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ —Å—Å—ã–ª–∫—É –Ω–∞ /watch?v=
    // –ò—â–µ–º —Å—Å—ã–ª–∫–∏, –∑–∞—Ç–µ–º –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –∫ –±–ª–∏–∂–∞–π—à–µ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –∫–∞—Ä—Ç–æ—á–∫–∏
    const videoLinks = Array.from(document.querySelectorAll('a[href*="/watch?v="]'));
    console.log(`[SearchParser] –ù–∞–π–¥–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –Ω–∞ –≤–∏–¥–µ–æ: ${videoLinks.length}`);

    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫)
    const uniqueCards = new Set();
    const cardElements = [];

    for (const link of videoLinks) {
        // –ò—â–µ–º –±–ª–∏–∂–∞–π—à–∏–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –∫–∞—Ä—Ç–æ—á–∫–∞
        let card = link.closest('ytd-video-renderer, ytd-item-section-renderer > *, [id^="video-title"], .yt-lockup-view-model, ytd-rich-item-renderer');
        if (!card) {
            // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–ª–∏–∂–∞–π—à–∏–π div –∏–ª–∏ section —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º–∏ –ø—Ä–∏–∑–Ω–∞–∫–∞–º–∏
            card = link.closest('div, section');
        }
        if (card && !uniqueCards.has(card)) {
            uniqueCards.add(card);
            cardElements.push(card);
        }
    }

    console.log(`[SearchParser] –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${cardElements.length}`);

    // 2. –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ isVideoCard
    const rejectedCards = [];
    const videoCards = cardElements.filter(card => {
        const isVideo = isVideoCard(card);
        if (!isVideo) {
            const titleEl = card.querySelector('#video-title, h3 a, yt-formatted-string[role="text"]');
            const title = titleEl?.textContent?.trim() || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
            rejectedCards.push({ title, href: link?.href || '–Ω–µ—Ç —Å—Å—ã–ª–∫–∏' });
        }
        return isVideo;
    });

    console.log(`[SearchParser] –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –≤–∏–¥–µ–æ: ${videoCards.length}`);
    if (rejectedCards.length > 0) {
        console.group(`[SearchParser] üö´ –û—Ç–∫–ª–æ–Ω–µ–Ω–æ ${rejectedCards.length} –∫–∞—Ä—Ç–æ—á–µ–∫:`);
        rejectedCards.slice(0, 10).forEach((rc, i) => {
            console.log(`${i + 1}. "${rc.title}" ‚Äî ${rc.href}`);
        });
        console.groupEnd();
    }

    // 3. –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º
    videoCards.forEach(highlightElement);
    console.log(`[SearchParser] –ü–æ–¥—Å–≤–µ—á–µ–Ω–æ –≤–∏–¥–µ–æ: ${videoCards.length}`);
    console.log("[SearchParser] === –ö–û–ù–ï–¶ –ü–ê–†–°–ò–ù–ì–ê ===");

    return videoCards;
}

/**
 * –£–¥–∞–ª—è–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫—É, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é parseAndHighlightSearchResults.
 */
function removeSearchHighlights() {
    const highlightedCards = document.querySelectorAll('.video-highlighted');
    let removedCount = 0;
    highlightedCards.forEach(card => {
        const highlightBoxes = card.querySelectorAll('div[style*="border: 3px solid"]');
        highlightBoxes.forEach(box => {
            box.remove();
            removedCount++;
        });
        card.classList.remove('video-highlighted');
    });
    console.log(`[SearchParser] –£–¥–∞–ª–µ–Ω–æ ${removedCount} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–¥—Å–≤–µ—Ç–∫–∏.`);
}

/**
 * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ DOM-—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–∏.
 * @param {HTMLElement[]} cardElements - –º–∞—Å—Å–∏–≤ DOM-—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫.
 * @param {string} searchQuery - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ø–æ–∫–∞").
 * @returns {Array<Object>} –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏.
 */
function scrapeSearchResults(cardElements, searchQuery = 'unknown_search') {
    console.log(`[SearchParser] –°–∫—Ä–∞–ø–∏–Ω–≥ ${cardElements.length} –∫–∞—Ä—Ç–æ—á–µ–∫...`);
    const scrapedData = [];
    cardElements.forEach((el, index) => {
        try {
            const titleElement = el.querySelector('#video-title');
            const title = titleElement?.textContent?.trim() || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';

            let videoId = '–ù–µ –Ω–∞–π–¥–µ–Ω';
            const linkElement = el.querySelector('a[href*="/watch?v="]');
            if (linkElement) {
                try {
                    const url = new URL(linkElement.href, window.location.origin);
                    videoId = url.searchParams.get('v') || '–ù–µ –Ω–∞–π–¥–µ–Ω';
                } catch (e) {
                    console.warn(`[SearchParser] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ URL –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ ${index}:`, e);
                }
            }

            let views = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
            const viewsElement = el.querySelector('.inline-metadata-item');
            if (viewsElement) {
                views = viewsElement.textContent.trim();
            }

            let channelName = '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
            const channelElement = el.querySelector('#channel-name a, ytd-channel-name a');
            if (channelElement) {
                channelName = channelElement.textContent.trim();
            }

            let thumbnailUrl = '';
            const thumbnailImg = el.querySelector('yt-image img');
            if (thumbnailImg && thumbnailImg.src) {
                thumbnailUrl = thumbnailImg.src;
            }

            scrapedData.push({
                title,
                videoId,
                views,
                channelName,
                sourceVideoId: searchQuery,
                thumbnailUrl
            });
        } catch (err) {
            console.error(`[SearchParser] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫—Ä–∞–ø–∏–Ω–≥–µ –∫–∞—Ä—Ç–æ—á–∫–∏ ${index}:`, err);
            scrapedData.push({
                title: `–û—à–∏–±–∫–∞ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ ${index}`,
                videoId: '',
                views: '',
                channelName: '',
                sourceVideoId: searchQuery,
                thumbnailUrl: ''
            });
        }
    });
    console.log(`[SearchParser] –°–∫—Ä–∞–ø–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω. –ò–∑–≤–ª–µ—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö: ${scrapedData.length}`);
    return scrapedData;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ content.js
window.ytSearchParser = {
    parseAndHighlight: parseAndHighlightSearchResults,
    removeHighlights: removeSearchHighlights,
    scrapeCards: scrapeSearchResults
};

console.log("[Content Module SearchParser] –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤.");
// core/utils/scroller.js

/**
 * –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É YouTube N —Ä–∞–∑ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π.
 * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
 * @param {number} [count=16] - –°–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å–∫—Ä–æ–ª–ª–∏—Ç—å.
 * @param {number} [delayMs=1500] - –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–∫—Ä–æ–ª–ª–∞–º–∏ (–º—Å).
 * @param {number} [step=1000] - –ù–∞ —Å–∫–æ–ª—å–∫–æ –ø–∏–∫—Å–µ–ª–µ–π —Å–∫—Ä–æ–ª–ª–∏—Ç—å –∑–∞ —Ä–∞–∑.
 * @returns {Promise<void>}
 */
export async function scrollPageNTimes(context, count = 16, delayMs = 1500, step = 1000) {
    const { log } = context;
    log(`üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫—Ä–æ–ª–ª–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${count} —Ä–∞–∑(–∞), —à–∞–≥ ${step}px, –∑–∞–¥–µ—Ä–∂–∫–∞ ${delayMs}–º—Å`, { module: 'Scroller' });

    try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ content script –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞
        // –ü–µ—Ä–µ–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        const response = await chrome.tabs.sendMessage(context.tabId, {
            action: "scrollNTimes",
            count: count,
            delayMs: delayMs,
            step: step
        });

        if (response && response.status === "success") {
            log(`‚úÖ –°–∫—Ä–æ–ª–ª–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø—Ä–∏–º–µ—Ä–Ω–æ ${response.cardCount} –∫–∞—Ä—Ç–æ—á–µ–∫.`, { module: 'Scroller' });
        } else {
            const errorMsg = response?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞";
            log(`‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞: ${errorMsg}`, { module: 'Scroller', level: 'error' });
            throw new Error(errorMsg);
        }
    } catch (err) {
        log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –¥–ª—è —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞: ${err.message}`, { module: 'Scroller', level: 'error' });
        throw err;
    }
}

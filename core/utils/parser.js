// core/utils/parser.js

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ content script –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –≤–∏–¥–µ–æ.
 * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è (–¥–ª—è tabId –∏ –ª–æ–≥–æ–≤).
 * @returns {Promise<{status: string, highlightedCards?: HTMLElement[], highlightedCount?: number, message?: string}>}
 * –í–ê–ñ–ù–û: DOM-—ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —á–µ—Ä–µ–∑ sendMessage, –æ–Ω–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –ø—É—Å—Ç—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ {}.
 * –ü–æ—ç—Ç–æ–º—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∞–º–∏—Ö –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ (scraping).
 */
export async function parseAndHighlight(context) {
    const { log, tabId } = context;
    // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ sourceVideoId –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ context
    // –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å ID —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–∏, –µ—Å–ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤–∏–¥–µ–æ, –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ.
    // –î–ª—è MVP –≤–æ–∑—å–º–µ–º –µ–≥–æ –∏–∑ URL –≤–∫–ª–∞–¥–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É.
    let sourceVideoId = 'unknown_source';
    try {
        if (typeof tabId === 'number' && tabId > 0) {
            const tab = await chrome.tabs.get(tabId);
            const url = new URL(tab.url);
            sourceVideoId = url.searchParams.get('v') || 'unknown_source_from_url';
        }
    } catch (getUrlErr) {
        console.warn("[Core Parser] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å sourceVideoId –∏–∑ URL –≤–∫–ª–∞–¥–∫–∏:", getUrlErr);
        sourceVideoId = 'unknown_source';
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º sourceVideoId, –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω —è–≤–Ω–æ –≤ params (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ —Å—Ü–µ–Ω–∞—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏)
    if (context.params && context.params.sourceVideoId) {
        sourceVideoId = context.params.sourceVideoId;
    }

    if (typeof tabId !== 'number' || tabId < 0) {
        const errorMsg = `–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π tabId –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞: ${tabId}`;
        log(`‚ùå ${errorMsg}`, { module: 'Parser', level: 'error' });
        throw new Error(errorMsg);
    }

    log(`üîç –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥, –ø–æ–¥—Å–≤–µ—Ç–∫—É –∏ —Å–∫—Ä–∞–ø–∏–Ω–≥ –≤–∏–¥–µ–æ (–∏—Å—Ç–æ—á–Ω–∏–∫: ${sourceVideoId})...`, { module: 'Parser' });

    try {
        const response = await chrome.tabs.sendMessage(tabId, {
            action: "parseAndHighlight",
            sourceVideoId: sourceVideoId // –ü–µ—Ä–µ–¥–∞–µ–º sourceVideoId –≤ content script
        });

        if (response && response.status === "success") {
            const count = response.highlightedCount;
            const data = response.scrapedData || [];
            log(`‚úÖ –ü–∞—Ä—Å–∏–Ω–≥, –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –∏ —Å–∫—Ä–∞–ø–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ù–∞–π–¥–µ–Ω–æ/–ø–æ–¥—Å–≤–µ—á–µ–Ω–æ –≤–∏–¥–µ–æ: ${count}, –∏–∑–≤–ª–µ—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö: ${data.length}`, { module: 'Parser' });

            // –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å background –ø–µ—Ä–≤—ã–µ N –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            const itemsToShow = Math.min(3, data.length);
            if (itemsToShow > 0) {
                console.group(`[Core Parser] –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–≤—ã—Ö ${itemsToShow} –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫:`);
                for (let i = 0; i < itemsToShow; i++) {
                    const item = data[i];
                    console.log(
                        `–ö–∞—Ä—Ç–æ—á–∫–∞ ${i + 1}:`,
                        `ID: ${item.videoId || 'N/A'}`,
                        `–ù–∞–∑–≤–∞–Ω–∏–µ: "${(item.title || 'N/A').substring(0, 50)}${(item.title || '').length > 50 ? '...' : ''}"`,
                        `–ö–∞–Ω–∞–ª: "${(item.channelName || 'N/A').substring(0, 30)}${(item.channelName || '').length > 30 ? '...' : ''}"`
                    );
                }
                console.groupEnd();
            }

            return response; // { status: "success", highlightedCount: number, scrapedData: Array }
        } else {
            const errorMsg = response?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞/–ø–æ–¥—Å–≤–µ—Ç–∫–∏/—Å–∫—Ä–∞–ø–∏–Ω–≥–∞";
            log(`‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞/–ø–æ–¥—Å–≤–µ—Ç–∫–∏/—Å–∫—Ä–∞–ø–∏–Ω–≥–∞: ${errorMsg}`, { module: 'Parser', level: 'error' });
            throw new Error(errorMsg);
        }
    } catch (err) {
        log(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ/–ø–æ–¥—Å–≤–µ—Ç–∫–µ/—Å–∫—Ä–∞–ø–∏–Ω–≥–µ: ${err.message}`, { module: 'Parser', level: 'error' });
        throw err; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—à–µ
    }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ content script –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏.
 * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è (–¥–ª—è tabId –∏ –ª–æ–≥–æ–≤).
 * @returns {Promise<void>}
 */
export async function removeParserHighlights(context) {
    const { log, tabId } = context;

    if (typeof tabId !== 'number' || tabId < 0) {
        // –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
        console.warn("[Core Parser] –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π tabId –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏:", tabId);
        return;
    }

    log(`üßπ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–∏...`, { module: 'Parser' });

    try {
        const response = await chrome.tabs.sendMessage(tabId, {
            action: "removeParserHighlights"
        });

        if (response && response.status === "success") {
            log(`‚úÖ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞.`, { module: 'Parser' });
        } else {
            const errorMsg = response?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏";
            log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏: ${errorMsg}`, { module: 'Parser', level: 'warn' });
            // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
        }
    } catch (err) {
        // –ú–æ–∂–µ—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å, –µ—Å–ª–∏ –≤–∫–ª–∞–¥–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞
        log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–¥—Å–≤–µ—Ç–∫–∏: ${err.message}`, { module: 'Parser', level: 'warn' });
    }
}
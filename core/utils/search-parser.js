// core/utils/search-parser.js

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ content script –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–∏.
 * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è.
 * @param {string} searchQuery - –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.
 * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞.
 */
export async function parseAndHighlightSearch(context, searchQuery) {
    const { log, tabId } = context;
    if (typeof tabId !== 'number' || tabId < 0) {
        throw new Error(`–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π tabId –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ–∏—Å–∫–∞: ${tabId}`);
    }
    log(`üîç –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: "${searchQuery}"...`, { module: 'SearchParser' });
    try {
        const response = await chrome.tabs.sendMessage(tabId, {
            action: "parseAndHighlightSearch",
            searchQuery: searchQuery
        });
        if (response && response.status === "success") {
            const count = response.highlightedCount;
            const data = response.scrapedData || [];
            log(`‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –ø–æ–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ/–ø–æ–¥—Å–≤–µ—á–µ–Ω–æ –≤–∏–¥–µ–æ: ${count}, –∏–∑–≤–ª–µ—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö: ${data.length}`, { module: 'SearchParser' });
            return response;
        } else {
            throw new Error(response?.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ–∏—Å–∫–∞");
        }
    } catch (err) {
        log(`‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –ø–æ–∏—Å–∫–∞: ${err.message}`, { module: 'SearchParser', level: 'error' });
        throw err;
    }
}
export class ControlSection {
    constructor() {
        // –û–±–Ω–æ–≤–ª—è–µ–º ID —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å popup.html
        this.runScenarioBtn = document.getElementById('runScenarioBtn'); // <-- –ò–∑–º–µ–Ω–µ–Ω–æ
        this.stopBtn = document.getElementById('stopBtn');
        this.copyTableBtn = document.getElementById('copyTableBtn');
        this.clearTableBtn = document.getElementById('clearTableBtn');
        this.clearLogBtn = document.getElementById('clearLogBtn');
        this.resetIndicesBtn = document.getElementById('resetIndicesBtn');
        this.dumpIndicesBtn = document.getElementById('dumpIndicesBtn');
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        this.scenarioSelector = document.getElementById('scenarioSelector'); // <-- –ù–æ–≤–æ–µ

        this.init();
    }

    init() {
        // –°–ª—É—à–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç popup –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
        document.addEventListener('control:enableStart', () => this.enableStart());
        document.addEventListener('control:disableStart', () => this.disableStart());

        if (this.resetIndicesBtn) {
            this.resetIndicesBtn.addEventListener('click', () => this.handleResetIndices());
        } else {
            console.warn("[ControlSection] –ö–Ω–æ–ø–∫–∞ 'resetIndicesBtn' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM.");
        }

        // üëá –ù–û–í–´–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –≤—ã–≤–æ–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if (this.dumpIndicesBtn) {
            this.dumpIndicesBtn.addEventListener('click', () => this.handleDumpIndices());
        } else {
            console.warn("[ControlSection] –ö–Ω–æ–ø–∫–∞ 'dumpIndicesBtn' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM.");
        }

        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π UI

        this.stopBtn.addEventListener('click', () => {
            document.dispatchEvent(new CustomEvent('stopAnalysis')); // –≠—Ç–æ —Å–æ–±—ã—Ç–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
        });

        this.copyTableBtn.addEventListener('click', () => {
            document.dispatchEvent(new CustomEvent('copyTable'));
        });

        this.clearTableBtn.addEventListener('click', () => {
            document.dispatchEvent(new CustomEvent('clearTable'));
        });

        this.clearLogBtn.addEventListener('click', () => {
            document.dispatchEvent(new CustomEvent('clearLog'));
        });
    }

    handleStart() {
        const iterations = parseInt(document.getElementById('iterationsInput').value) || 10;
        const mode = document.querySelector('input[name="selectionMode"]:checked')?.value || 'smart';

        this.dispatchEvent('startAnalysis', { iterations, mode });
        this.startBtn.disabled = true;
        this.stopBtn.disabled = false;
    }

    handleStop() {
        this.dispatchEvent('stopAnalysis');
        this.startBtn.disabled = false;
        this.stopBtn.disabled = true;
    }

    handleCopyTable() {
        this.dispatchEvent('copyTable');
    }

    handleClearTable() {
        this.dispatchEvent('clearTable');
    }

    handleClearLog() {
        this.dispatchEvent('clearLog');
    }

    async handleResetIndices() {
        console.log("[ControlSection] –ù–∞—á–∞–ª–æ handleResetIndices");
        document.dispatchEvent(new CustomEvent('log', { detail: { message: 'üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–±—Ä–æ—Å –∏–Ω–¥–µ–∫—Å–æ–≤...', level: 'info' } }));

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ background
            const response = await chrome.runtime.sendMessage({
                action: "resetIndices"
            });

            if (response && response.status === "success") {
                console.log("[ControlSection] –ò–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã –≤ background");
                document.dispatchEvent(new CustomEvent('log', { detail: { message: '‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã', level: 'success' } }));
                // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ, –µ—Å–ª–∏ –¥—Ä—É–≥–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å
                // document.dispatchEvent(new CustomEvent('indicesReset'));
            } else {
                const errorMsg = response?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
                console.error("[ControlSection] –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ background:", errorMsg);
                document.dispatchEvent(new CustomEvent('log', { detail: { message: `‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∏–Ω–¥–µ–∫—Å–æ–≤: ${errorMsg}`, level: 'error' } }));
            }
        } catch (err) {
            console.error("[ControlSection] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã —Å–±—Ä–æ—Å–∞ –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ background:", err);
            document.dispatchEvent(new CustomEvent('log', { detail: { message: `‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏: ${err.message}`, level: 'error' } }));
        }
    }

    async handleDumpIndices() {
        console.log("[ControlSection] –ù–∞—á–∞–ª–æ handleDumpIndices");
        document.dispatchEvent(new CustomEvent('log', { detail: { message: 'üîç –ó–∞–ø—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤...', level: 'info' } }));

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ background –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
            const response = await chrome.runtime.sendMessage({
                action: "getIndexState"
            });

            if (response && response.status === "success") {
                const state = response.serializableState;
                console.log("[ControlSection] === –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ IndexManager ===");

                // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ state —Å –ø–æ—è—Å–Ω–µ–Ω–∏—è–º–∏
                // üëá –û–ë–ù–û–í–õ–ï–ù–û: –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                console.log(`scrapedDataBuffer:`, `${state.scrapedDataBuffer_count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`, state.scrapedDataBuffer_sample.slice(0, 10));
                console.log(`visitedVideoIds:`, `${state.visitedVideoIds_count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`, Array.from(state.visitedVideoIds_sample).slice(0, 10));
                console.log(`channelVideoCounts:`, `${state.channelVideoCounts_count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`, Object.fromEntries(
                    Object.entries(state.channelVideoCounts_sample).slice(0, 10)
                ));
                console.log(`channelToVideoIds:`, `${state.channelToVideoIds_count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`, Object.fromEntries(
                    Object.entries(state.channelToVideoIds_sample).slice(0, 10).map(([k, v]) => [k, v.slice(0, 3)])
                ));
                console.log("[ControlSection] === –ö–æ–Ω–µ—Ü —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ ===");

                document.dispatchEvent(new CustomEvent('log', { detail: { message: '‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –≤—ã–≤–µ–¥–µ–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å background', level: 'success' } }));
            } else {
                const errorMsg = response?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
                console.error("[ControlSection] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –∏–∑ background:", errorMsg);
                document.dispatchEvent(new CustomEvent('log', { detail: { message: `‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤: ${errorMsg}`, level: 'error' } }));
            }
        } catch (err) {
            console.error("[ControlSection] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ background:", err);
            document.dispatchEvent(new CustomEvent('log', { detail: { message: `‚ùå –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏: ${err.message}`, level: 'error' } }));
        }
    }

    enableStart() {
        // –õ–æ–≥–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –≤ PopupApp.updateScenarioControlButtons
        if (this.runScenarioBtn) this.runScenarioBtn.disabled = false;
        if (this.stopBtn) this.stopBtn.disabled = true;
    }

    disableStart() {
        // –õ–æ–≥–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –≤ PopupApp.updateScenarioControlButtons
        if (this.runScenarioBtn) this.runScenarioBtn.disabled = true;
        if (this.stopBtn) this.stopBtn.disabled = false;
    }

    dispatchEvent(type, detail) {
        document.dispatchEvent(new CustomEvent(type, { detail }));
    }
}
